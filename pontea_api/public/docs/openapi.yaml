openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'https://pontea.000webhostapp.com'
paths:
  /api/activity:
    get:
      summary: 'Retrieve all activities with related information.'
      operationId: retrieveAllActivitiesWithRelatedInformation
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"created_by\": {\n                \"id\": 1,\n                \"name\": \"John Doe\",\n                \"email\": \"john@example.com\",\n                \"created_at\": \"2023-09-01T12:34:56Z\",\n                \"updated_at\": \"2023-09-01T12:34:56Z\"\n            },\n            \"area\": {\n                \"id\": 1,\n                \"title\": \"Science\"\n            },\n            \"age_group\": {\n                \"id\": 2,\n                \"title\": \"Ages 5-8\"\n            },\n            \"level\": {\n                \"id\": 3,\n                \"title\": \"Intermediate\"\n            },\n            \"title\": \"Fun Science Experiment\",\n            \"description\": \"A simple and fun science experiment for kids.\",\n            \"media_path_1\": \"https://example.com/media/experiment.jpg\",\n            \"media_path_2\": null,\n            \"media_path_3\": null,\n            \"media_path_4\": null,\n            \"created_at\": \"2023-09-02T10:15:30Z\",\n            \"updated_at\": \"2023-09-02T10:15:30Z\"\n\n        },\n        {\n            \"id\": 2,\n            \"created_by\": {\n                \"id\": 2,\n                \"name\": \"Alice Smith\",\n                \"email\": \"alice@example.com\",\n                \"created_at\": \"2023-09-01T13:45:00Z\",\n                \"updated_at\": \"2023-09-01T13:45:00Z\"\n            },\n            \"area\": {\n                \"id\": 2,\n                \"title\": \"Art\"\n            },\n            \"age_group\": {\n                \"id\": 1,\n                \"title\": \"Ages 3-5\"\n            },\n            \"level\": {\n                \"id\": 2,\n                \"title\": \"Beginner\"\n            },\n            \"title\": \"Creative Painting\",\n            \"description\": \"Learn creative painting techniques for beginners.\",\n            \"media_path_1\": \"https://example.com/media/painting.jpg\",\n            \"media_path_2\": null,\n            \"media_path_3\": null,\n            \"media_path_4\": null,\n            \"created_at\": \"2023-09-02T11:30:45Z\",\n            \"updated_at\": \"2023-09-02T11:30:45Z\"\n            \"note\": 3.5\n\n        }\n        // ... (other activity objects)\n    ]\n}"
      tags:
        - Activities
      security: []
  /api/activity/filter:
    get:
      summary: 'Filter activities based on request parameters.'
      operationId: filterActivitiesBasedOnRequestParameters
      description: ''
      parameters:
        -
          in: query
          name: text
          description: 'The text to search in the title or description of the activity (optional).'
          example: harum
          required: false
          schema:
            type: string
            description: 'The text to search in the title or description of the activity (optional).'
            example: harum
        -
          in: query
          name: age_group_id
          description: 'The ID of the age group to filter activities by a specific age group (optional).'
          example: 13
          required: false
          schema:
            type: integer
            description: 'The ID of the age group to filter activities by a specific age group (optional).'
            example: 13
        -
          in: query
          name: area_id
          description: 'The ID of the area to filter activities by a specific area (optional).'
          example: 16
          required: false
          schema:
            type: integer
            description: 'The ID of the area to filter activities by a specific area (optional).'
            example: 16
        -
          in: query
          name: level_id
          description: 'The ID of the level to filter activities by a specific level (optional).'
          example: 19
          required: false
          schema:
            type: integer
            description: 'The ID of the level to filter activities by a specific level (optional).'
            example: 19
        -
          in: query
          name: created_by
          description: 'The ID of the user who created the activity to filter activities created by a specific user (optional).'
          example: 3
          required: false
          schema:
            type: integer
            description: 'The ID of the user who created the activity to filter activities created by a specific user (optional).'
            example: 3
        -
          in: query
          name: has_multimedia_resources
          description: 'Defines whether the activity should have multimedia resources (true) or not (false) (optional).'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Defines whether the activity should have multimedia resources (true) or not (false) (optional).'
            example: false
        -
          in: query
          name: has_visual_instructions
          description: 'Defines whether the activity should have visual instructions (true) or not (false) (optional).'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Defines whether the activity should have visual instructions (true) or not (false) (optional).'
            example: false
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"created_by\": {\n                \"id\": 1,\n                \"name\": \"John Doe\",\n                \"email\": \"john@example.com\",\n                \"created_at\": \"2023-09-01T12:34:56Z\",\n                \"updated_at\": \"2023-09-01T12:34:56Z\"\n            },\n            \"area\": {\n                \"id\": 1,\n                \"title\": \"Science\"\n            },\n            \"age_group\": {\n                \"id\": 2,\n                \"title\": \"Ages 5-8\"\n            },\n            \"level\": {\n                \"id\": 3,\n                \"title\": \"Intermediate\"\n            },\n            \"title\": \"Sample Activity\",\n            \"description\": \"Description of the sample activity.\",\n            \"media_path_1\": \"media/activity1.jpg\",\n            \"media_path_2\": null,\n            \"media_path_3\": null,\n            \"media_path_4\": null,\n            \"has_multimedia_resources\": true,\n            \"has_visual_instructions\": false,\n            \"created_at\": \"2023-09-02T10:15:30Z\",\n            \"updated_at\": \"2023-09-02T10:15:30Z\"\n            \"note\": 3.5\n        },\n        {\n            \"id\": 2,\n            \"created_by\": {\n                \"id\": 2,\n                \"name\": \"Alice Smith\",\n                \"email\": \"alice@example.com\",\n                \"created_at\": \"2023-09-01T13:45:00Z\",\n                \"updated_at\": \"2023-09-01T13:45:00Z\"\n            },\n            \"area\": {\n                \"id\": 2,\n                \"title\": \"Art\"\n            },\n            \"age_group\": {\n                \"id\": 1,\n                \"title\": \"Ages 3-5\"\n            },\n            \"level\": {\n                \"id\": 2,\n                \"title\": \"Beginner\"\n            },\n            \"title\": \"Another Activity\",\n            \"description\": \"Description of another activity.\",\n            \"media_path_1\": null,\n            \"media_path_2\": null,\n            \"media_path_3\": null,\n            \"media_path_4\": null,\n            \"has_multimedia_resources\": false,\n            \"has_visual_instructions\": true,\n            \"created_at\": \"2023-09-02T11:30:45Z\",\n            \"updated_at\": \"2023-09-02T11:30:45Z\"\n            \"note\": 3.5\n        }\n        // ... other activities that match the filtering criteria\n    ]\n}"
      tags:
        - Activities
      security: []
  /api/activity/store:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  activity:
                    id: 1
                    title: 'Sample Activity'
                    description: 'Description of the sample activity.'
                    age_group_id: 1
                    area_id: 2
                    level_id: 3
                    has_multimedia_resources: true
                    has_visual_instructions: false
                    created_at: '2023-09-01T12:00:00Z'
                    updated_at: '2023-09-01T12:00:00Z'
                  message: 'Activity created successfully'
                properties:
                  activity:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Sample Activity'
                      description:
                        type: string
                        example: 'Description of the sample activity.'
                      age_group_id:
                        type: integer
                        example: 1
                      area_id:
                        type: integer
                        example: 2
                      level_id:
                        type: integer
                        example: 3
                      has_multimedia_resources:
                        type: boolean
                        example: true
                      has_visual_instructions:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        example: '2023-09-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-09-01T12:00:00Z'
                  message:
                    type: string
                    example: 'Activity created successfully'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    title:
                      - 'The title field is required.'
                    description:
                      - 'The description field is required.'
                    age_group_id:
                      - 'The age group id field is required.'
                    area_id:
                      - 'The area id field is required.'
                    level_id:
                      - 'The level id field is required.'
                    has_multimedia_resources:
                      - 'The has multimedia resources field is required.'
                    has_visual_instructions:
                      - 'The has visual instructions field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      title:
                        type: array
                        example:
                          - 'The title field is required.'
                        items:
                          type: string
                      description:
                        type: array
                        example:
                          - 'The description field is required.'
                        items:
                          type: string
                      age_group_id:
                        type: array
                        example:
                          - 'The age group id field is required.'
                        items:
                          type: string
                      area_id:
                        type: array
                        example:
                          - 'The area id field is required.'
                        items:
                          type: string
                      level_id:
                        type: array
                        example:
                          - 'The level id field is required.'
                        items:
                          type: string
                      has_multimedia_resources:
                        type: array
                        example:
                          - 'The has multimedia resources field is required.'
                        items:
                          type: string
                      has_visual_instructions:
                        type: array
                        example:
                          - 'The has visual instructions field is required.'
                        items:
                          type: string
      tags:
        - Activities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the activity.'
                  example: 'Sample Activity'
                description:
                  type: string
                  description: 'The description of the activity.'
                  example: 'Description of the sample activity.'
                age_group_id:
                  type: integer
                  description: 'The ID of the age group associated with the activity.'
                  example: 1
                area_id:
                  type: integer
                  description: 'The ID of the area associated with the activity.'
                  example: 2
                level_id:
                  type: integer
                  description: 'The ID of the level associated with the activity.'
                  example: 3
                has_multimedia_resources:
                  type: boolean
                  description: 'Defines whether the activity has multimedia resources (true) or not (false).'
                  example: true
                has_visual_instructions:
                  type: boolean
                  description: 'Defines whether the activity has visual instructions (true) or not (false).'
                  example: false
                media_path_1:
                  type: string
                  description: ''
                  example: ea
                media_path_2:
                  type: string
                  description: ''
                  example: maxime
                media_path_3:
                  type: string
                  description: ''
                  example: error
                media_path_4:
                  type: string
                  description: ''
                  example: quia
                price:
                  type: number
                  description: ''
                  example: 622596.7732492
              required:
                - title
                - description
                - age_group_id
                - area_id
                - level_id
                - has_multimedia_resources
                - has_visual_instructions
                - price
      security: []
  '/api/activity/update/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  activity:
                    id: 1
                    title: 'Updated Activity'
                    description: 'Updated description.'
                    age_group_id: 2
                    area_id: 1
                    level_id: 4
                    has_multimedia_resources: false
                    has_visual_instructions: true
                    created_at: '2023-09-01T12:00:00Z'
                    updated_at: '2023-09-02T10:00:00Z'
                  message: 'Activity updated successfully'
                properties:
                  activity:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Updated Activity'
                      description:
                        type: string
                        example: 'Updated description.'
                      age_group_id:
                        type: integer
                        example: 2
                      area_id:
                        type: integer
                        example: 1
                      level_id:
                        type: integer
                        example: 4
                      has_multimedia_resources:
                        type: boolean
                        example: false
                      has_visual_instructions:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2023-09-01T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2023-09-02T10:00:00Z'
                  message:
                    type: string
                    example: 'Activity updated successfully'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Activity not found'
                properties:
                  message:
                    type: string
                    example: 'Activity not found'
        422:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"age_group_id\": [\"The selected age group id is invalid.\"],\n        \"area_id\": [\"The selected area id is invalid.\"],\n        \"level_id\": [\"The selected level id is invalid.\"],\n    }\n}"
      tags:
        - Activities
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The new title of the activity.'
                  example: 'Updated Activity'
                description:
                  type: string
                  description: 'The new description of the activity.'
                  example: 'Updated description.'
                age_group_id:
                  type: integer
                  description: 'The new age group ID associated with the activity.'
                  example: 2
                area_id:
                  type: integer
                  description: 'The new area ID associated with the activity.'
                  example: 1
                level_id:
                  type: integer
                  description: 'The new level ID associated with the activity.'
                  example: 4
                has_multimedia_resources:
                  type: boolean
                  description: 'Defines whether the activity has multimedia resources (true) or not (false).'
                  example: false
                has_visual_instructions:
                  type: boolean
                  description: 'Defines whether the activity has visual instructions (true) or not (false).'
                  example: true
                media_path_1:
                  type: string
                  description: ''
                  example: et
                media_path_2:
                  type: string
                  description: ''
                  example: a
                media_path_3:
                  type: string
                  description: ''
                  example: mollitia
                media_path_4:
                  type: string
                  description: ''
                  example: quis
                price:
                  type: number
                  description: ''
                  example: 468090530.44024
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the activity to update.'
        example: 13
        required: true
        schema:
          type: integer
  /api/age_group:
    get:
      summary: 'Display a listing of age groups.'
      operationId: displayAListingOfAgeGroups
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Ages 3-5\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Ages 5-8\"\n        },\n        // ... (other age group objects)\n    ]\n}"
      tags:
        - 'Age Groups'
      security: []
  /api/area:
    get:
      summary: 'Display a listing of areas with associated activities.'
      operationId: displayAListingOfAreasWithAssociatedActivities
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Science\",\n            \"activities_count\": 3,\n            \"activities\": [\n                {\n                    \"id\": 1,\n                    \"created_by\": {\n                        \"id\": 1,\n                        \"name\": \"John Doe\",\n                        \"email\": \"john@example.com\",\n                        \"created_at\": \"2023-09-01T12:34:56Z\",\n                        \"updated_at\": \"2023-09-01T12:34:56Z\"\n                    },\n                    \"age_group\": {\n                        \"id\": 2,\n                        \"title\": \"Ages 5-8\"\n                    },\n                    \"level\": {\n                        \"id\": 3,\n                        \"title\": \"Intermediate\"\n                    },\n                    \"title\": \"Fun Science Experiment\",\n                    \"description\": \"A simple and fun science experiment for kids.\",\n                    \"media_path_1\": \"https://example.com/media/experiment.jpg\",\n                    \"media_path_2\": null,\n                    \"media_path_3\": null,\n                    \"media_path_4\": null,\n                    \"created_at\": \"2023-09-02T10:15:30Z\",\n                    \"updated_at\": \"2023-09-02T10:15:30Z\"\n                },\n                // ... (other activity objects in the Science area)\n            ]\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Art\",\n            \"activities_count\": 2,\n            \"activities\": [\n                {\n                    \"id\": 2,\n                    \"created_by\": {\n                        \"id\": 2,\n                        \"name\": \"Alice Smith\",\n                        \"email\": \"alice@example.com\",\n                        \"created_at\": \"2023-09-01T13:45:00Z\",\n                        \"updated_at\": \"2023-09-01T13:45:00Z\"\n                    },\n                    \"age_group\": {\n                        \"id\": 1,\n                        \"title\": \"Ages 3-5\"\n                    },\n                    \"level\": {\n                        \"id\": 2,\n                        \"title\": \"Beginner\"\n                    },\n                    \"title\": \"Creative Painting\",\n                    \"description\": \"Learn creative painting techniques for beginners.\",\n                    \"media_path_1\": \"https://example.com/media/painting.jpg\",\n                    \"media_path_2\": null,\n                    \"media_path_3\": null,\n                    \"media_path_4\": null,\n                    \"created_at\": \"2023-09-02T11:30:45Z\",\n                    \"updated_at\": \"2023-09-02T11:30:45Z\"\n                },\n                // ... (other activity objects in the Art area)\n            ]\n        },\n        // ... (other area objects)\n    ]\n}"
      tags:
        - Areas
      security: []
  /api/register:
    post:
      summary: 'Register a new user.'
      operationId: registerANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                    created_at: '2023-09-01T12:34:56Z'
                    updated_at: '2023-09-01T12:34:56Z'
                  message: 'User created successfully'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                      created_at:
                        type: string
                        example: '2023-09-01T12:34:56Z'
                      updated_at:
                        type: string
                        example: '2023-09-01T12:34:56Z'
                  message:
                    type: string
                    example: 'User created successfully'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    email:
                      - 'The email has already been taken.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email address of the user.'
                  example: john@example.com
                password:
                  type: string
                  description: 'The password for the user.'
                  example: secret
                password_confirmation:
                  type: string
                  description: "The confirmation of the user's password."
                  example: secret
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'Log in the user.'
      operationId: logInTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User successfully logged in'
                  token: generated_token_here
                properties:
                  message:
                    type: string
                    example: 'User successfully logged in'
                  token:
                    type: string
                    example: generated_token_here
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Incorrect password'
                properties:
                  message:
                    type: string
                    example: 'Incorrect password'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: testuser@example.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: secret
              required:
                - email
                - password
      security: []
  /api/profile:
    get:
      summary: 'Get the profile information for the authenticated user.'
      operationId: getTheProfileInformationForTheAuthenticatedUser
      description: "This endpoint retrieves detailed information about the authenticated user, including their purchased activities, activities created by them,\naverage rating, and count of ratings for their created activities."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                    created_at: '2023-09-01T12:34:56Z'
                    updated_at: '2023-09-01T12:34:56Z'
                  purchased_activities:
                    -
                      id: 1
                      title: 'Activity 1'
                      description: 'Description of Activity 1'
                      price: 10.99
                      created_at: '2023-09-02T14:45:00Z'
                      updated_at: '2023-09-02T14:45:00Z'
                    -
                      id: 2
                      title: 'Activity 2'
                      description: 'Description of Activity 2'
                      price: 12.99
                      created_at: '2023-09-03T10:30:00Z'
                      updated_at: '2023-09-03T10:30:00Z'
                  created_activities:
                    -
                      id: 3
                      title: 'My Created Activity 1'
                      description: 'Description of My Created Activity 1'
                      price: 8.99
                      created_at: '2023-09-04T09:15:00Z'
                      updated_at: '2023-09-04T09:15:00Z'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                      created_at:
                        type: string
                        example: '2023-09-01T12:34:56Z'
                      updated_at:
                        type: string
                        example: '2023-09-01T12:34:56Z'
                  purchased_activities:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Activity 1'
                        description: 'Description of Activity 1'
                        price: 10.99
                        created_at: '2023-09-02T14:45:00Z'
                        updated_at: '2023-09-02T14:45:00Z'
                      -
                        id: 2
                        title: 'Activity 2'
                        description: 'Description of Activity 2'
                        price: 12.99
                        created_at: '2023-09-03T10:30:00Z'
                        updated_at: '2023-09-03T10:30:00Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Activity 1'
                        description:
                          type: string
                          example: 'Description of Activity 1'
                        price:
                          type: number
                          example: 10.99
                        created_at:
                          type: string
                          example: '2023-09-02T14:45:00Z'
                        updated_at:
                          type: string
                          example: '2023-09-02T14:45:00Z'
                  created_activities:
                    type: array
                    example:
                      -
                        id: 3
                        title: 'My Created Activity 1'
                        description: 'Description of My Created Activity 1'
                        price: 8.99
                        created_at: '2023-09-04T09:15:00Z'
                        updated_at: '2023-09-04T09:15:00Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 3
                        title:
                          type: string
                          example: 'My Created Activity 1'
                        description:
                          type: string
                          example: 'Description of My Created Activity 1'
                        price:
                          type: number
                          example: 8.99
                        created_at:
                          type: string
                          example: '2023-09-04T09:15:00Z'
                        updated_at:
                          type: string
                          example: '2023-09-04T09:15:00Z'
      tags:
        - Authentication
  '/api/age_group/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Request without token'
                properties:
                  message:
                    type: string
                    example: 'Request without token'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the age group.'
        example: 1
        required: true
        schema:
          type: integer
  /api/levels:
    get:
      summary: 'Display a listing of levels.'
      operationId: displayAListingOfLevels
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Beginner\"\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Intermediate\"\n        },\n        // ... (other level objects)\n    ]\n}"
      tags:
        - Levels
      security: []
  /api/purchase:
    post:
      summary: 'Purchase an activity.'
      operationId: purchaseAnActivity
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Purchase completed successfully.'
                properties:
                  message:
                    type: string
                    example: 'Purchase completed successfully.'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Insufficient credit to purchase this activity'
                properties:
                  message:
                    type: string
                    example: 'Insufficient credit to purchase this activity'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Activity not found'
                properties:
                  message:
                    type: string
                    example: 'Activity not found'
      tags:
        - Purchase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: integer
                  description: 'The ID of the activity to be purchased.'
                  example: 16
                pontea_credit_payment:
                  type: boolean
                  description: 'Indicates whether the purchase should be made using available credit (true) or direct payment (false). Default is false.'
                  example: false
              required:
                - activity_id
  /api/shopping_carts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"user_id\": 1,\n            \"activity_id\": 5,\n            \"created_at\": \"2023-09-01 12:00:00\",\n            \"updated_at\": \"2023-09-01 12:00:00\",\n            \"activity\": {\n                \"id\": 5,\n                \"title\": \"Sample Activity\",\n                \"price\": 10.0\n            }\n        },\n        // ... (other shopping cart items)\n    ],\n    \"total\": 50.0\n}"
      tags:
        - 'Shopping Cart'
      security: []
  /api/shopping_carts/store:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Item added to the shopping cart'
                properties:
                  message:
                    type: string
                    example: 'Item added to the shopping cart'
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Item already exists in the shopping cart'
                properties:
                  message:
                    type: string
                    example: 'Item already exists in the shopping cart'
      tags:
        - 'Shopping Cart'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: integer
                  description: 'The ID of the activity to add to the shopping cart.'
                  example: 16
              required:
                - activity_id
      security: []
  /api/shopping_carts/remove:
    post:
      summary: 'Remove all shopping cart items with a specific activity for a user.'
      operationId: removeAllShoppingCartItemsWithASpecificActivityForAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'All items with the specified activity removed from the shopping cart'
                properties:
                  message:
                    type: string
                    example: 'All items with the specified activity removed from the shopping cart'
      tags:
        - 'Shopping Cart'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: integer
                  description: 'The ID of the activity to remove from the shopping cart.'
                  example: 13
              required:
                - activity_id
      security: []
  /api/shopping_carts/destroy:
    delete:
      summary: 'Remove all shopping cart items for a user.'
      operationId: removeAllShoppingCartItemsForAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'All items removed from the shopping cart'
                properties:
                  message:
                    type: string
                    example: 'All items removed from the shopping cart'
      tags:
        - 'Shopping Cart'
      security: []
  /api/teacher:
    get:
      summary: 'Retrieve all teachers with their average rating.'
      operationId: retrieveAllTeachersWithTheirAverageRating
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"John Doe\",\n            \"email\": \"john@example.com\",\n            \"created_at\": \"2023-09-01T12:34:56Z\",\n            \"updated_at\": \"2023-09-01T12:34:56Z\",\n            \"note\": 4.5\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Alice Smith\",\n            \"email\": \"alice@example.com\",\n            \"created_at\": \"2023-09-01T13:45:00Z\",\n            \"updated_at\": \"2023-09-01T13:45:00Z\",\n            \"note\": 3.8\n        }\n        // ... (other teacher objects)\n    ]\n}"
      tags:
        - Teachers
      security: []
  /api/teacher/turn_user_into_teacher:
    get:
      summary: 'Turn a user into a teacher.'
      operationId: turnAUserIntoATeacher
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                    is_teacher: true
                    created_at: '2023-09-01T12:34:56Z'
                    updated_at: '2023-09-01T12:36:24Z'
                  message: 'User is now a teacher'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                      is_teacher:
                        type: boolean
                        example: true
                      created_at:
                        type: string
                        example: '2023-09-01T12:34:56Z'
                      updated_at:
                        type: string
                        example: '2023-09-01T12:36:24Z'
                  message:
                    type: string
                    example: 'User is now a teacher'
      tags:
        - Teachers
  '/api/teacher/{id}':
    get:
      summary: 'Retrieve a specific teacher and their created activities.'
      operationId: retrieveASpecificTeacherAndTheirCreatedActivities
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\",\n        \"created_at\": \"2023-09-01T12:34:56Z\",\n        \"updated_at\": \"2023-09-01T12:34:56Z\",\n        \"note\": 4.5,\n        \"created_activities\": [\n            {\n                \"id\": 1,\n                \"title\": \"Sample Activity 1\",\n                \"description\": \"Description of Sample Activity 1.\",\n                \"media_path_1\": \"media/activity1.jpg\",\n                \"media_path_2\": null,\n                \"media_path_3\": null,\n                \"media_path_4\": null,\n                \"has_multimedia_resources\": true,\n                \"has_visual_instructions\": false,\n                \"created_at\": \"2023-09-01T12:00:00Z\",\n                \"updated_at\": \"2023-09-01T12:30:00Z\",\n                \"note\": 4.2\n            },\n            {\n                \"id\": 2,\n                \"title\": \"Sample Activity 2\",\n                \"description\": \"Description of Sample Activity 2.\",\n                \"media_path_1\": \"media/activity2.jpg\",\n                \"media_path_2\": null,\n                \"media_path_3\": null,\n                \"media_path_4\": null,\n                \"has_multimedia_resources\": true,\n                \"has_visual_instructions\": false,\n                \"created_at\": \"2023-09-02T10:00:00Z\",\n                \"updated_at\": \"2023-09-02T10:30:00Z\",\n                \"note\": 4.7\n            }\n            // ... (other activity objects created by the teacher)\n        ]\n    }\n}"
      tags:
        - Teachers
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the teacher.'
        example: 11
        required: true
        schema:
          type: integer
tags:
  -
    name: Activities
    description: "This function allows you to filter activities based on various criteria, including text in the title or description,\nage group, area, level, created by user, and the presence of multimedia resources or visual instructions."
  -
    name: 'Age Groups'
    description: ''
  -
    name: Areas
    description: ''
  -
    name: Authentication
    description: 'Creates a new user with the provided information.'
  -
    name: Endpoints
    description: ''
  -
    name: Levels
    description: ''
  -
    name: Purchase
    description: 'This endpoint allows a user to purchase an activity, either by making a direct payment or using their available credit balance.'
  -
    name: 'Shopping Cart'
    description: 'Retrieve a list of all items in the shopping cart for the authenticated user.'
  -
    name: Teachers
    description: ''
