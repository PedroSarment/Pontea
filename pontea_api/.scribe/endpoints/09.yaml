name: Questions
description: 'This function creates a new question associated with a specific activity.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/question/store
    metadata:
      groupName: Questions
      groupDescription: 'This function creates a new question associated with a specific activity.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created question.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      question:
        name: question
        description: 'The text of the question.'
        required: true
        example: 'How does this experiment work?'
        type: string
        enumValues: []
        custom: []
      activity_id:
        name: activity_id
        description: 'The ID of the associated activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      question: 'How does this experiment work?'
      activity_id: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Question created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The given data was invalid.",
              "errors": {
                  "question": ["The question field is required."],
                  "activity_id": ["The activity_id field is required."],
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/question/responds
    metadata:
      groupName: Questions
      groupDescription: 'This function allows you to respond to a specific question.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Respond to a question.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      question_id:
        name: question_id
        description: 'The ID of the question to respond to.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      response:
        name: response
        description: 'The response to the question.'
        required: true
        example: "Here's how the experiment works..."
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      question_id: 1
      response: "Here's how the experiment works..."
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Question responded successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Question not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The given data was invalid.",
              "errors": {
                  "question_id": ["The question_id field is required."],
                  "response": ["The response field is required."],
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/question/like
    metadata:
      groupName: Questions
      groupDescription: 'This function allows you to like a specific question.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Like a question.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      question_id:
        name: question_id
        description: 'The ID of the question to like.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanBodyParameters:
      question_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Question liked successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Question not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The given data was invalid.",
              "errors": {
                  "question_id": ["The question_id field is required."],
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
