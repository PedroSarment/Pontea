name: Activities
description: |-
  This function allows you to filter activities based on various criteria, including text in the title or description,
  age group, area, level, created by user, and the presence of multimedia resources or visual instructions.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/activity
    metadata:
      groupName: Activities
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve all activities with related information.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "created_by": {
                          "id": 1,
                          "name": "John Doe",
                          "email": "john@example.com",
                          "created_at": "2023-09-01T12:34:56Z",
                          "updated_at": "2023-09-01T12:34:56Z"
                      },
                      "area": {
                          "id": 1,
                          "title": "Science"
                      },
                      "age_group": {
                          "id": 2,
                          "title": "Ages 5-8"
                      },
                      "level": {
                          "id": 3,
                          "title": "Intermediate"
                      },
                      "title": "Fun Science Experiment",
                      "description": "A simple and fun science experiment for kids.",
                      "media_path_1": "https://example.com/media/experiment.jpg",
                      "media_path_2": null,
                      "media_path_3": null,
                      "media_path_4": null,
                      "created_at": "2023-09-02T10:15:30Z",
                      "updated_at": "2023-09-02T10:15:30Z"

                  },
                  {
                      "id": 2,
                      "created_by": {
                          "id": 2,
                          "name": "Alice Smith",
                          "email": "alice@example.com",
                          "created_at": "2023-09-01T13:45:00Z",
                          "updated_at": "2023-09-01T13:45:00Z"
                      },
                      "area": {
                          "id": 2,
                          "title": "Art"
                      },
                      "age_group": {
                          "id": 1,
                          "title": "Ages 3-5"
                      },
                      "level": {
                          "id": 2,
                          "title": "Beginner"
                      },
                      "title": "Creative Painting",
                      "description": "Learn creative painting techniques for beginners.",
                      "media_path_1": "https://example.com/media/painting.jpg",
                      "media_path_2": null,
                      "media_path_3": null,
                      "media_path_4": null,
                      "created_at": "2023-09-02T11:30:45Z",
                      "updated_at": "2023-09-02T11:30:45Z"
                      "note": 3.5

                  }
                  // ... (other activity objects)
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/activity/filter
    metadata:
      groupName: Activities
      groupDescription: |-
        This function allows you to filter activities based on various criteria, including text in the title or description,
        age group, area, level, created by user, and the presence of multimedia resources or visual instructions.
      subgroup: ''
      subgroupDescription: ''
      title: 'Filter activities based on request parameters.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      text:
        name: text
        description: 'The text to search in the title or description of the activity (optional).'
        required: false
        example: harum
        type: string
        enumValues: []
        custom: []
      age_group_id:
        name: age_group_id
        description: 'The ID of the age group to filter activities by a specific age group (optional).'
        required: false
        example: 13
        type: integer
        enumValues: []
        custom: []
      area_id:
        name: area_id
        description: 'The ID of the area to filter activities by a specific area (optional).'
        required: false
        example: 16
        type: integer
        enumValues: []
        custom: []
      level_id:
        name: level_id
        description: 'The ID of the level to filter activities by a specific level (optional).'
        required: false
        example: 19
        type: integer
        enumValues: []
        custom: []
      created_by:
        name: created_by
        description: 'The ID of the user who created the activity to filter activities created by a specific user (optional).'
        required: false
        example: 3
        type: integer
        enumValues: []
        custom: []
      has_multimedia_resources:
        name: has_multimedia_resources
        description: 'Defines whether the activity should have multimedia resources (true) or not (false) (optional).'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      has_visual_instructions:
        name: has_visual_instructions
        description: 'Defines whether the activity should have visual instructions (true) or not (false) (optional).'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanQueryParameters:
      text: harum
      age_group_id: 13
      area_id: 16
      level_id: 19
      created_by: 3
      has_multimedia_resources: false
      has_visual_instructions: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "created_by": {
                          "id": 1,
                          "name": "John Doe",
                          "email": "john@example.com",
                          "created_at": "2023-09-01T12:34:56Z",
                          "updated_at": "2023-09-01T12:34:56Z"
                      },
                      "area": {
                          "id": 1,
                          "title": "Science"
                      },
                      "age_group": {
                          "id": 2,
                          "title": "Ages 5-8"
                      },
                      "level": {
                          "id": 3,
                          "title": "Intermediate"
                      },
                      "title": "Sample Activity",
                      "description": "Description of the sample activity.",
                      "media_path_1": "media/activity1.jpg",
                      "media_path_2": null,
                      "media_path_3": null,
                      "media_path_4": null,
                      "has_multimedia_resources": true,
                      "has_visual_instructions": false,
                      "created_at": "2023-09-02T10:15:30Z",
                      "updated_at": "2023-09-02T10:15:30Z"
                      "note": 3.5
                  },
                  {
                      "id": 2,
                      "created_by": {
                          "id": 2,
                          "name": "Alice Smith",
                          "email": "alice@example.com",
                          "created_at": "2023-09-01T13:45:00Z",
                          "updated_at": "2023-09-01T13:45:00Z"
                      },
                      "area": {
                          "id": 2,
                          "title": "Art"
                      },
                      "age_group": {
                          "id": 1,
                          "title": "Ages 3-5"
                      },
                      "level": {
                          "id": 2,
                          "title": "Beginner"
                      },
                      "title": "Another Activity",
                      "description": "Description of another activity.",
                      "media_path_1": null,
                      "media_path_2": null,
                      "media_path_3": null,
                      "media_path_4": null,
                      "has_multimedia_resources": false,
                      "has_visual_instructions": true,
                      "created_at": "2023-09-02T11:30:45Z",
                      "updated_at": "2023-09-02T11:30:45Z"
                      "note": 3.5
                  }
                  // ... other activities that match the filtering criteria
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/activity/store
    metadata:
      groupName: Activities
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the activity.'
        required: true
        example: 'Sample Activity'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: 'The description of the activity.'
        required: true
        example: 'Description of the sample activity.'
        type: string
        enumValues: []
        custom: []
      age_group_id:
        name: age_group_id
        description: 'The ID of the age group associated with the activity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
      area_id:
        name: area_id
        description: 'The ID of the area associated with the activity.'
        required: true
        example: 2
        type: integer
        enumValues: []
        custom: []
      level_id:
        name: level_id
        description: 'The ID of the level associated with the activity.'
        required: true
        example: 3
        type: integer
        enumValues: []
        custom: []
      has_multimedia_resources:
        name: has_multimedia_resources
        description: 'Defines whether the activity has multimedia resources (true) or not (false).'
        required: true
        example: true
        type: boolean
        enumValues: []
        custom: []
      has_visual_instructions:
        name: has_visual_instructions
        description: 'Defines whether the activity has visual instructions (true) or not (false).'
        required: true
        example: false
        type: boolean
        enumValues: []
        custom: []
      media_path_1:
        name: media_path_1
        description: ''
        required: false
        example: ea
        type: string
        enumValues: []
        custom: []
      media_path_2:
        name: media_path_2
        description: ''
        required: false
        example: maxime
        type: string
        enumValues: []
        custom: []
      media_path_3:
        name: media_path_3
        description: ''
        required: false
        example: error
        type: string
        enumValues: []
        custom: []
      media_path_4:
        name: media_path_4
        description: ''
        required: false
        example: quia
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 622596.7732492
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      title: 'Sample Activity'
      description: 'Description of the sample activity.'
      age_group_id: 1
      area_id: 2
      level_id: 3
      has_multimedia_resources: true
      has_visual_instructions: false
      media_path_1: ea
      media_path_2: maxime
      media_path_3: error
      media_path_4: quia
      price: 622596.7732492
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "activity": {
                  "id": 1,
                  "title": "Sample Activity",
                  "description": "Description of the sample activity.",
                  "age_group_id": 1,
                  "area_id": 2,
                  "level_id": 3,
                  "has_multimedia_resources": true,
                  "has_visual_instructions": false,
                  "created_at": "2023-09-01T12:00:00Z",
                  "updated_at": "2023-09-01T12:00:00Z"
              },
              "message": "Activity created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The given data was invalid.",
              "errors": {
                  "title": ["The title field is required."],
                  "description": ["The description field is required."],
                  "age_group_id": ["The age group id field is required."],
                  "area_id": ["The area id field is required."],
                  "level_id": ["The level id field is required."],
                  "has_multimedia_resources": ["The has multimedia resources field is required."],
                  "has_visual_instructions": ["The has visual instructions field is required."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/activity/update/{id}'
    metadata:
      groupName: Activities
      groupDescription: 'Update an existing activity with the provided information.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters:
      id:
        name: id
        description: 'The ID of the activity to update.'
        required: true
        example: 13
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The new title of the activity.'
        required: false
        example: 'Updated Activity'
        type: string
        enumValues: []
        custom: []
      description:
        name: description
        description: 'The new description of the activity.'
        required: false
        example: 'Updated description.'
        type: string
        enumValues: []
        custom: []
      age_group_id:
        name: age_group_id
        description: 'The new age group ID associated with the activity.'
        required: false
        example: 2
        type: integer
        enumValues: []
        custom: []
      area_id:
        name: area_id
        description: 'The new area ID associated with the activity.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      level_id:
        name: level_id
        description: 'The new level ID associated with the activity.'
        required: false
        example: 4
        type: integer
        enumValues: []
        custom: []
      has_multimedia_resources:
        name: has_multimedia_resources
        description: 'Defines whether the activity has multimedia resources (true) or not (false).'
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
      has_visual_instructions:
        name: has_visual_instructions
        description: 'Defines whether the activity has visual instructions (true) or not (false).'
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      media_path_1:
        name: media_path_1
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        custom: []
      media_path_2:
        name: media_path_2
        description: ''
        required: false
        example: a
        type: string
        enumValues: []
        custom: []
      media_path_3:
        name: media_path_3
        description: ''
        required: false
        example: mollitia
        type: string
        enumValues: []
        custom: []
      media_path_4:
        name: media_path_4
        description: ''
        required: false
        example: quis
        type: string
        enumValues: []
        custom: []
      price:
        name: price
        description: ''
        required: false
        example: 468090530.44024
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      title: 'Updated Activity'
      description: 'Updated description.'
      age_group_id: 2
      area_id: 1
      level_id: 4
      has_multimedia_resources: false
      has_visual_instructions: true
      media_path_1: et
      media_path_2: a
      media_path_3: mollitia
      media_path_4: quis
      price: 468090530.44024
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "activity": {
                  "id": 1,
                  "title": "Updated Activity",
                  "description": "Updated description.",
                  "age_group_id": 2,
                  "area_id": 1,
                  "level_id": 4,
                  "has_multimedia_resources": false,
                  "has_visual_instructions": true,
                  "created_at": "2023-09-01T12:00:00Z",
                  "updated_at": "2023-09-02T10:00:00Z"
              },
              "message": "Activity updated successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "Activity not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The given data was invalid.",
              "errors": {
                  "age_group_id": ["The selected age group id is invalid."],
                  "area_id": ["The selected area id is invalid."],
                  "level_id": ["The selected level id is invalid."],
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
