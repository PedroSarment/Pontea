name: Authentication
description: 'Creates a new user with the provided information.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: 'Creates a new user with the provided information.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'The password for the user.'
        required: true
        example: secret
        type: string
        enumValues: []
        custom: []
      password_confirmation:
        name: password_confirmation
        description: "The confirmation of the user's password."
        required: true
        example: secret
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: secret
      password_confirmation: secret
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "john@example.com",
                  "created_at": "2023-09-01T12:34:56Z",
                  "updated_at": "2023-09-01T12:34:56Z"
              },
              "message": "User created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "The given data was invalid.",
              "errors": {
                  "email": ["The email has already been taken."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log in the user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: testuser@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: secret
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: testuser@example.com
      password: secret
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User successfully logged in",
              "token": "generated_token_here"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "We could not find a user with that email"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "message": "Incorrect password"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the profile information for the authenticated user.'
      description: |-
        This endpoint retrieves detailed information about the authenticated user, including their purchased activities, activities created by them,
        average rating, and count of ratings for their created activities.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "john@example.com",
                  "created_at": "2023-09-01T12:34:56Z",
                  "updated_at": "2023-09-01T12:34:56Z"
              },
              "purchased_activities": [
                  {
                      "id": 1,
                      "title": "Activity 1",
                      "description": "Description of Activity 1",
                      "price": 10.99,
                      "created_at": "2023-09-02T14:45:00Z",
                      "updated_at": "2023-09-02T14:45:00Z"
                  },
                  {
                      "id": 2,
                      "title": "Activity 2",
                      "description": "Description of Activity 2",
                      "price": 12.99,
                      "created_at": "2023-09-03T10:30:00Z",
                      "updated_at": "2023-09-03T10:30:00Z"
                  }
              ],
              "created_activities": [
                  {
                      "id": 3,
                      "title": "My Created Activity 1",
                      "description": "Description of My Created Activity 1",
                      "price": 8.99,
                      "created_at": "2023-09-04T09:15:00Z",
                      "updated_at": "2023-09-04T09:15:00Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/removeCredit
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Remove credit from the user's account."
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $2y$10$mhuGD2BQ6WZYTZcpPxwTHOIj/aQlmgG9ahXn66BZQ.GBmbGB7gggi'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Saldo Retirado com Sucesso"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
